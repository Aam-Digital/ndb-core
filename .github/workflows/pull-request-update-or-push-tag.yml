name: pull-request-update-or-push-tag
# central CI flow to test and build the app

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    tags:
      - "*"

env:
  REGISTRY_IMAGE: aamdigital/ndb-server
  # Either the tag name for tag builds or 'pr-XXX' for pull request builds,
  # where XXX is the number of the PR.
  # Doubles as release name and app version
  BUILD_NAME: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || github.ref_name }}

jobs:
  qa:
    uses: ./.github/workflows/_qa.yaml
    secrets: inherit
    with:
      upload-e2e-screenshots: >-
        ${{
          github.event_name == 'pull_request' &&
          !github.event.pull_request.draft
        }}

  build-webapp:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - run: echo "building app for BUILD_NAME ${{ env.BUILD_NAME }}"
      - run: npm install --ci
      - run: |
          sed -i 's/appVersion: ".*"/appVersion: "${{ env.BUILD_NAME }}"/g' \
            src/environments/environment*.ts

      - name: Cache angular
        uses: actions/cache@v4
        with:
          path: .angular/cache
          key: angular-v1-prod-${{ hashFiles('package-lock.json') }}

      - run: npx ng build --configuration production

      - name: Inject sentry token in sourcemaps
        run: |
          npx sentry-cli sourcemaps inject ./dist
          npx ngsw-config dist ngsw-config.json

      - name: Upload webapp files
        uses: actions/upload-artifact@v4
        with:
          name: webapp-files
          path: ./dist
          if-no-files-found: error
          retention-days: 1


  build-image:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            os: ubuntu-latest
          - platform: linux/arm64
            os: ubuntu-24.04-arm
    runs-on: ${{ matrix.os }}
    needs:
      - build-webapp
    steps:
      - name: Checkout repository files
        uses: actions/checkout@v4

      - name: Prepare Platform
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> "$GITHUB_ENV"

      - name: Download webapp files
        uses: actions/download-artifact@v4
        with:
          name: webapp-files
          path: dist

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Image and push by digest
        id: build-image
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          context: ./
          file: ./build/Dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha
          cache-to: type=gha,mode=min
        env:
          SOURCE_DATE_EPOCH: 0

      - name: Export digest
        run: |
          mkdir -p "./tmp/digests"
          digest="${{ steps.build-image.outputs.digest }}"
          touch "./tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ./tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  sentry-upload-sourcemaps:
    runs-on: ubuntu-latest
    needs:
      - build-webapp
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
    steps:
      - name: Download webapp files
        uses: actions/download-artifact@v4
        with:
          name: webapp-files
          path: dist

      - name: Upload Sourcemaps
        # skipped for pre-releases (e.g. .master, pr-*)
        if: ${{ !contains(env.BUILD_NAME, 'master') && !contains(env.BUILD_NAME, 'pr-') }}
        run: |
          npm install -g @sentry/cli
          sentry-cli sourcemaps upload --release="ndb-core@${{ env.BUILD_NAME }}" ./dist

  docker-merge:
    runs-on: ubuntu-latest
    needs:
      - build-image
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ./tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create manifest list and push
        working-directory: ./tmp/digests
        run: |
          # shellcheck disable=SC2046
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}

  sentry-release:
    runs-on: ubuntu-latest
    needs:
      - docker-merge
      - build-webapp
      - sentry-upload-sourcemaps
      - qa
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Create Release
        # skipped for pre-releases (e.g. .master, pr-*)
        if: ${{ !contains(env.BUILD_NAME, 'master') && !contains(env.BUILD_NAME, 'pr-') }}
        run: |
          npm install -g @sentry/cli
          sentry-cli releases new "ndb-core@${{ env.BUILD_NAME }}"

  deploy:
    runs-on: ubuntu-latest
    needs:
      - docker-merge
    steps:
      - name: Deploy updated image
        if: ${{ github.event.ref == '' }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /var/docker/pr-${{ github.event.number }}
            docker compose pull
            docker compose up -d
