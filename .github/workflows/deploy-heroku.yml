name: Deploy Docker Image to Heroku
on: pull_request

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    env:
      TIME: 0
    steps:
      - uses: actions/checkout@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Cacher Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_SIMON_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build dev image
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./docker/pipeline/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          target: builder
          tags: builder
          build-args: RUN_TESTS=${{ true }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: copy files from container
        run: |
          docker buildx ls
          id=$(docker buildx create builder)
          docker buildx cp $id:/app/coverage/ ./coverage/
          ls -a
          docker buildx rm $id
      - name: Publish code coverage
        uses: paambaati/codeclimate-action@v2.7.4
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_ID }}
      - name: Build and push prod image
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./docker/pipeline/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_SIMON_USERNAME }}/aam-digital-docker-deploy:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Heroku deployment
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_TOKEN }}
        run: |
          heroku container:login
          docker pull ${{ secrets.DOCKER_SIMON_USERNAME }}/aam-digital-docker-deploy:latest
          docker tag ${{ secrets.DOCKER_SIMON_USERNAME }}/aam-digital-docker-deploy:latest registry.heroku.com/${{ github.head_ref }}-1234/web
          docker push registry.heroku.com/${{ github.head_ref }}-1234/web
          heroku container:release -a ${{ github.head_ref }}-1234 web
