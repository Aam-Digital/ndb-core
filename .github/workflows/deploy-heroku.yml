name: Deploy Docker Image to Heroku
on: pull_request

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Cacher Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_SIMON_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - run: echo ${{ github.head_ref }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_SIMON_USERNAME }}/aam-digital-docker-deploy:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Heroku deployment
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_TOKEN }}
        run: |
          heroku container:login
          apps=$(heroku apps --all)
          if [[ $apps == *"stark-stream-18827"* ]]; then
            echo "It's there!"
          fi
          docker tag ${{ secrets.DOCKER_SIMON_USERNAME }}/aam-digital-docker-deploy:latest registry.heroku.com/stark-stream-18827/web
          docker push registry.heroku.com/stark-stream-18827/web
          heroku container:release -a stark-stream-18827 web


