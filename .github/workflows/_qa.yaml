name: QA

on:
  workflow_call:
    inputs:
      upload-e2e-screenshots:
        type: boolean
        required: false
        default: false
        description: If true, upload screenshots to Argos CI for comparison

permissions:
  contents: read
  id-token: write # for QLTY code coverage (https://docs.qlty.sh/migration/coverage)

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - run: npm install --ci
      - run: npx eslint --max-warnings=0
      - run: npx tsc -p .
      - run: npx tsc -p e2e
      - name: actionlint
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint -color

  test-unit:
    runs-on: ubuntu-latest
    env:
      TZ: Europe/Berlin
      FORCE_COLOR: 1
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - run: npm ci --no-progress

      - name: Cache angular
        uses: actions/cache@v4
        with:
          path: .angular/cache
          key: angular-v1-test-unit-${{ hashFiles('package-lock.json') }}
      - run: npm run test-ci

      - uses: qltysh/qlty-action/coverage@v1
        with:
          oidc: true
          files: coverage/lcov.info

  test-e2e:
    runs-on: ubuntu-latest
    env:
      TZ: Europe/Berlin
      FORCE_COLOR: 1
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - run: npm install --ci
      - name: Cache playwright
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-v1-${{ hashFiles('package-lock.json') }}

      - if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install chromium

      - name: Cache angular
        uses: actions/cache@v4
        with:
          path: .angular/cache
          key: angular-v1-devel-${{ hashFiles('package-lock.json') }}

      - run: npx ng build --configuration=development

      # See playwright.config.ts for more CI-specific configuration
      - run: npx playwright test

      - run: npx argos upload test-results --files '**/argos/*.png'
        if: ${{ inputs.upload-e2e-screenshots }}
        # We may run into quotas
        continue-on-error: true
        env:
          ARGOS_TOKEN: ${{ secrets.ARGOS_TOKEN }}

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results
          path: |
            test-results/**/trace.zip
