name: Master Update
on:
  push:
    branches:
      - master

jobs:
  create-and-deploy-compodoc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies
        run: npm install @compodoc/compodoc
      - name: Run compodoc
        run: npm run compodoc
      - name: Deploy on pages
        uses: peaceiris/actions-gh-pages@v3.7.0-8
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: doc/compodoc
          destination_dir: documentation
  publish-prod-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Build and push prod image
        uses: docker/build-push-action@v2
        env:
          BUILDKIT_PROGRESS: plain
        with:
          context: ./
          file: ./docker/pipeline/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/aam-digital:latest
          build-args: RUN_TESTS=${{ true }}
          outputs: type=local,dest=./img
          cache-from: type=registry,ref=${{ secrets.DOCKER_SIMON_USERNAME }}/aam-digital:cache
          cache-to: type=registry,ref=${{ secrets.DOCKER_SIMON_USERNAME }}/aam-digital:cache,mode=max
      - name: Publish code coverage
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_ID }}
        with:
          coverageLocations: ${{github.workspace}}/img/app/coverage/lcov.info:lcov
  run-semantic-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
