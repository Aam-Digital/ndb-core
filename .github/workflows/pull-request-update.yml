name: Pipeline
on: pull_request

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Build dev image and save it locally
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./docker/pipeline/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          target: builder
          tags: test-image
          load: true
          build-args: RUN_TESTS=${{ true }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/aam-digital:cache
      - name: Publish code coverage
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_ID }}
        with:
          coverageCommand: docker images && docker cp test-image:/coverage .
  deploy-prod-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Build prod image
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./docker/pipeline/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          load: true
          tags: prod-image
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/aam-digital:cache
      - name: Heroku deployment
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_TOKEN }}
        run: |
          name=test-deployment-pr-${{ github.event.number }}
          heroku container:login
          docker tag prod-image registry.heroku.com/${name}/web
          docker push registry.heroku.com/${name}/web
          heroku container:release -a ${name} web
