name: Master Push

on:
  push:
    branches:
      - master

jobs:
  create-and-deploy-compodoc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository files
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install @compodoc/compodoc

      - name: Run compodoc
        run: npm run compodoc

      - name: Deploy on pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: doc/compodoc
          destination_dir: documentation
          force_orphan: true

  code-qualty:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - run: npm install --ci
      - run: npx eslint
      - run: npx tsc -p e2e

  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            os: ubuntu-latest
          - platform: linux/arm64
            os: ubuntu-24.04-arm
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository files
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run tests in Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          context: ./
          file: ./build/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          target: test

      - name: Run tests with timezone
        if: ${{ matrix.platform == 'linux/amd64' }}
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          context: ./
          file: ./build/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          target: test
          build-args: |
            TZ=America/Detroit

  test-e2e:
    runs-on: ubuntu-latest
    env:
      TZ: Europe/Berlin
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - run: npm install --ci
      - name: Cache playwright
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-v1-${{ hashFiles('package-lock.json') }}

      - if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npm exec playwright install chromium

      - run: npm exec ng build --configuration=development

      # See playwright.config.ts for more CI-specific configuration
      - run: npx playwright test --browser chromium

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results
          path: |
            test-results/**/trace.zip

  pre-release:
    runs-on: ubuntu-latest
    needs:
      - test
      - test-e2e
    steps:
      - name: Checkout repository files
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up node
        uses: actions/setup-node@v4

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          extra_plugins: |
            semantic-release-replace-plugin@1.2.6
            @semantic-release/git
            @semantic-release/github
            semantic-release-slack-bot
