name: Master Push

on:
  push:
    branches:
      - master

jobs:
  create-and-deploy-compodoc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository files
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install @compodoc/compodoc

      - name: Run compodoc
        run: npm run compodoc

      - name: Deploy on pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: doc/compodoc
          destination_dir: documentation
          force_orphan: true

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          # - linux/arm64 todo use arm64 chrome
    steps:
      - name: Checkout repository files
        uses: actions/checkout@v4

      - name: Prepare Platform
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get time of commit
        run: echo "TIME=$(git log -1 --pretty=format:%ct)" >> $GITHUB_ENV

      - name: Run tests and upload coverage
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          context: ./
          file: ./build/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          target: builder
          build-args: |
            UPLOAD_COVERAGE=${{ true }}
            GIT_COMMIT_SHA=${{ github.sha }}
            GIT_BRANCH=master
            GIT_COMMITTED_AT=${{ env.TIME }}
            CC_TEST_REPORTER_ID=${{ secrets.CODE_CLIMATE_ID }}
            BUILD=${{ false }}

  pre-release:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: Checkout repository files
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up node
        uses: actions/setup-node@v4

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          extra_plugins: |
            semantic-release-replace-plugin@1.2.6
            @semantic-release/git
            @semantic-release/github
            semantic-release-slack-bot
