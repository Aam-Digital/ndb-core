server {
    listen       ${PORT};
    listen  [::]:${PORT};

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    root /usr/share/nginx/html;

    add_header Content-Security-Policy-Report-Only "default-src 'self' ${CSP_SRC_ALLOW}; frame-ancestors 'self' ${CSP_FRAME_ALLOW}; trusted-types angular; require-trusted-types-for 'script'; report-uri ${CSP_REPORT_URI}";
    add_header X-Frame-Options: SAMEORIGIN; # only applies in older browsers, CSP frame-ancestors takes prevalence https://stackoverflow.com/a/40417609/1473411
    add_header X-Content-Type-Options: nosniff;

    # Catch requests to the (locale) assets folder and add fallback to super-folder
    # E.g. if '/en-US/assets/config.json' doesn't exist, try '/assets/config.json'
    location ~* ^/.+/assets/(.+)$ {
        # $1 refers to everything after 'assets/'
        try_files $uri /assets/$1 =404;
    }

    location /de {
        index  index.html index.htm;
        try_files $uri $uri/ /de/index.html;
    }

    location /en {
        index  index.html index.htm;
        try_files $uri $uri/ /en-US/index.html;
    }

    # Set the default language when nothing is entered in the url
    location / {
        try_files $uri /${DEFAULT_LANGUAGE}/index.html;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location /db {
        rewrite /db/(.*) /$1 break;
        proxy_pass ${COUCHDB_URL};
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Ssl on;
    }

    location /webdav {
        rewrite /webdav/(.*) /$1 break;
        proxy_pass ${WEBDAV_URL};
    }

    location /logging {
        rewrite /logging/(.*) /$1 break;
        add_header Content-Type: application/x-sentry-envelope;
        proxy_pass ${LOGGING_URL};
    }
}

